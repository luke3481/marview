{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Luke\\\\OneDrive\\\\Desktop\\\\GitHub\\\\marview\\\\frontend\\\\src\\\\pages\\\\solution.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { MapContainer, TileLayer, ZoomControl } from \"react-leaflet\";\nimport { PageContainer } from \"./styles/solution_style.js\";\nimport L from \"leaflet\";\nimport \"leaflet-openweathermap-master\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Solution() {\n  _s();\n  var mapRef = useRef(null);\n  var APP_ID = \"e6d8c9c20269bd6d193a610ab4f7d761\";\n  useEffect(function () {\n    // Create the map\n    if (mapRef.current) {\n      var clouds = L.OWM.clouds({\n        appId: APP_ID\n      });\n      var cloudscls = L.OWM.cloudsClassic({\n        appId: APP_ID\n      });\n      var precipitation = L.OWM.precipitation({\n        appId: APP_ID\n      });\n      var precipitationcls = L.OWM.precipitationClassic({\n        appId: APP_ID\n      });\n      var rain = L.OWM.rain({\n        appId: APP_ID\n      });\n      var raincls = L.OWM.rainClassic({\n        appId: APP_ID\n      });\n      var snow = L.OWM.snow({\n        appId: APP_ID\n      });\n      var pressure = L.OWM.pressure({\n        appId: APP_ID\n      });\n      var pressurecntr = L.OWM.pressureContour({\n        appId: APP_ID\n      });\n      var temp = L.OWM.temperature({\n        appId: APP_ID\n      });\n      var wind = L.OWM.wind({\n        appId: APP_ID\n      });\n\n      // Add the OpenWeatherMap tile layer to the map\n      clouds.addTo(map);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(PageContainer, {\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      ref: mapRef,\n      center: [39.1, -76.1],\n      zoom: 10,\n      scrollWheelZoom: true,\n      zoomControl: false,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a>\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ZoomControl, {\n        position: \"topright\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(Solution, \"9mn7MMe4fPaZ50ApsOpRWF2HbFg=\");\n_c = Solution;\nexport default Solution;\nvar _c;\n$RefreshReg$(_c, \"Solution\");","map":{"version":3,"names":["React","useEffect","useRef","MapContainer","TileLayer","ZoomControl","PageContainer","L","jsxDEV","_jsxDEV","Solution","_s","mapRef","APP_ID","current","clouds","OWM","appId","cloudscls","cloudsClassic","precipitation","precipitationcls","precipitationClassic","rain","raincls","rainClassic","snow","pressure","pressurecntr","pressureContour","temp","temperature","wind","addTo","map","children","ref","center","zoom","scrollWheelZoom","zoomControl","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","position","_c","$RefreshReg$"],"sources":["C:/Users/Luke/OneDrive/Desktop/GitHub/marview/frontend/src/pages/solution.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { MapContainer, TileLayer, ZoomControl } from \"react-leaflet\";\r\nimport { PageContainer } from \"./styles/solution_style.js\";\r\nimport L from \"leaflet\";\r\nimport \"leaflet-openweathermap-master\";\r\n\r\nfunction Solution() {\r\n  const mapRef = useRef(null);\r\n  const APP_ID = \"e6d8c9c20269bd6d193a610ab4f7d761\";\r\n\r\n  useEffect(() => {\r\n    // Create the map\r\n    if (mapRef.current) {\r\n      const clouds = L.OWM.clouds({ appId: APP_ID });\r\n      const cloudscls = L.OWM.cloudsClassic({ appId: APP_ID });\r\n      const precipitation = L.OWM.precipitation({ appId: APP_ID });\r\n      const precipitationcls = L.OWM.precipitationClassic({\r\n        appId: APP_ID,\r\n      });\r\n      const rain = L.OWM.rain({ appId: APP_ID });\r\n      const raincls = L.OWM.rainClassic({ appId: APP_ID });\r\n      const snow = L.OWM.snow({ appId: APP_ID });\r\n      const pressure = L.OWM.pressure({ appId: APP_ID });\r\n      const pressurecntr = L.OWM.pressureContour({ appId: APP_ID });\r\n      const temp = L.OWM.temperature({ appId: APP_ID });\r\n      const wind = L.OWM.wind({ appId: APP_ID });\r\n\r\n      // Add the OpenWeatherMap tile layer to the map\r\n      clouds.addTo(map);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <PageContainer>\r\n      <MapContainer\r\n        ref={mapRef}\r\n        center={[39.1, -76.1]}\r\n        zoom={10}\r\n        scrollWheelZoom={true}\r\n        zoomControl={false}\r\n      >\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a>'\r\n        />\r\n        <ZoomControl position=\"topright\" />\r\n      </MapContainer>\r\n    </PageContainer>\r\n  );\r\n}\r\n\r\nexport default Solution;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}