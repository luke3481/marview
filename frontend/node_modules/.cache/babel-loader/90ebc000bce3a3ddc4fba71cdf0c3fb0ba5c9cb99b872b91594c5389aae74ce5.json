{"ast":null,"code":"import _slicedToArray from \"C:/Users/Luke/OneDrive/Desktop/GitHub/marview/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\Luke\\\\OneDrive\\\\Desktop\\\\GitHub\\\\marview\\\\frontend\\\\src\\\\pages\\\\solution.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import {\n//   MapContainer,\n//   TileLayer,\n//   ZoomControl,\n//   LayersControl,\n// } from \"react-leaflet\";\n// import {\n//   PageContainer,\n//   MapTileLayer,\n//   Legend,\n// } from \"./styles/solution_style.js\";\n// import TemperatureLegend from \"../components/legend_temp.js\";\n\n// function Solution() {\n//   const API_KEY = \"06aac0fd4ba239a20d824ef89602f311\";\n\n//   return (\n//     <PageContainer>\n//       <MapContainer\n//         center={[39.1, -76.1]}\n//         zoom={6}\n//         scrollWheelZoom={true}\n//         zoomControl={false}\n//       >\n//         <MapTileLayer\n//           url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n//           attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a>'\n//         />\n//         <LayersControl position=\"topleft\">\n//           <LayersControl.Overlay name=\"Precipitation\">\n//             <TileLayer\n//               url={`https://tile.openweathermap.org/map/precipitation_new/{z}/{x}/{y}.png?appid=${API_KEY}`}\n//             />\n//           </LayersControl.Overlay>\n//           <LayersControl.Overlay name=\"Clouds\">\n//             <TileLayer\n//               url={`https://tile.openweathermap.org/map/clouds_new/{z}/{x}/{y}.png?appid=${API_KEY}`}\n//             />\n//           </LayersControl.Overlay>\n//           <LayersControl.Overlay name=\"Temperature\">\n//             <TileLayer\n//               url={`https://tile.openweathermap.org/map/temp_new/{z}/{x}/{y}.png?appid=${API_KEY}`}\n//             />\n//             <Legend>\n//               <TemperatureLegend />\n//             </Legend>\n//           </LayersControl.Overlay>\n//           <LayersControl.Overlay name=\"Wind\">\n//             <TileLayer\n//               url={`https://tile.openweathermap.org/map/wind_new/{z}/{x}/{y}.png?appid=${API_KEY}`}\n//             />\n//           </LayersControl.Overlay>\n//           <LayersControl.Overlay name=\"Pressure\">\n//             <TileLayer\n//               url={`https://tile.openweathermap.org/map/pressure_new/{z}/{x}/{y}.png?appid=${API_KEY}`}\n//             />\n//           </LayersControl.Overlay>\n//         </LayersControl>\n//         <ZoomControl position=\"topright\" />\n//       </MapContainer>\n//     </PageContainer>\n//   );\n// }\n\n// export default Solution;\n\nimport React, { useEffect, useState } from \"react\";\nimport { MapContainer, TileLayer, ZoomControl, LayersControl } from \"react-leaflet\";\nimport { PageContainer, MapTileLayer, Legend } from \"./styles/solution_style.js\";\nimport TemperatureLegend from \"../components/legend_temp.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Solution() {\n  _s();\n  var API_KEY = \"06aac0fd4ba239a20d824ef89602f311\";\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    showLegend = _useState2[0],\n    setShowLegend = _useState2[1];\n  useEffect(function () {\n    var temperatureLayer = document.querySelector(\".leaflet-control-layers-selector + span[title='Temperature']\");\n    if (temperatureLayer) {\n      temperatureLayer.addEventListener(\"click\", function () {\n        setShowLegend(true);\n      });\n      temperatureLayer.addEventListener(\"dblclick\", function () {\n        setShowLegend(false);\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(PageContainer, {\n    children: [/*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [39.1, -76.1],\n      zoom: 6,\n      scrollWheelZoom: true,\n      zoomControl: false,\n      children: [/*#__PURE__*/_jsxDEV(MapTileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a>\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LayersControl, {\n        position: \"topleft\",\n        children: [/*#__PURE__*/_jsxDEV(LayersControl.Overlay, {\n          name: \"Precipitation\",\n          children: /*#__PURE__*/_jsxDEV(TileLayer, {\n            url: \"https://tile.openweathermap.org/map/precipitation_new/{z}/{x}/{y}.png?appid=\".concat(API_KEY)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LayersControl.Overlay, {\n          name: \"Clouds\",\n          children: /*#__PURE__*/_jsxDEV(TileLayer, {\n            url: \"https://tile.openweathermap.org/map/clouds_new/{z}/{x}/{y}.png?appid=\".concat(API_KEY)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LayersControl.Overlay, {\n          name: \"Temperature\",\n          children: /*#__PURE__*/_jsxDEV(TileLayer, {\n            url: \"https://tile.openweathermap.org/map/temp_new/{z}/{x}/{y}.png?appid=\".concat(API_KEY)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LayersControl.Overlay, {\n          name: \"Wind\",\n          children: /*#__PURE__*/_jsxDEV(TileLayer, {\n            url: \"https://tile.openweathermap.org/map/wind_new/{z}/{x}/{y}.png?appid=\".concat(API_KEY)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LayersControl.Overlay, {\n          name: \"Pressure\",\n          children: /*#__PURE__*/_jsxDEV(TileLayer, {\n            url: \"https://tile.openweathermap.org/map/pressure_new/{z}/{x}/{y}.png?appid=\".concat(API_KEY)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ZoomControl, {\n        position: \"topright\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), showLegend && /*#__PURE__*/_jsxDEV(Legend, {\n      children: /*#__PURE__*/_jsxDEV(TemperatureLegend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(Solution, \"0JE1cvp9E4yEaEhGzp1RvqDjVSE=\");\n_c = Solution;\nexport default Solution;\nvar _c;\n$RefreshReg$(_c, \"Solution\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","ZoomControl","LayersControl","PageContainer","MapTileLayer","Legend","TemperatureLegend","jsxDEV","_jsxDEV","Solution","_s","API_KEY","_useState","_useState2","_slicedToArray","showLegend","setShowLegend","temperatureLayer","document","querySelector","addEventListener","children","center","zoom","scrollWheelZoom","zoomControl","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","position","Overlay","name","concat","_c","$RefreshReg$"],"sources":["C:/Users/Luke/OneDrive/Desktop/GitHub/marview/frontend/src/pages/solution.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import {\r\n//   MapContainer,\r\n//   TileLayer,\r\n//   ZoomControl,\r\n//   LayersControl,\r\n// } from \"react-leaflet\";\r\n// import {\r\n//   PageContainer,\r\n//   MapTileLayer,\r\n//   Legend,\r\n// } from \"./styles/solution_style.js\";\r\n// import TemperatureLegend from \"../components/legend_temp.js\";\r\n\r\n// function Solution() {\r\n//   const API_KEY = \"06aac0fd4ba239a20d824ef89602f311\";\r\n\r\n//   return (\r\n//     <PageContainer>\r\n//       <MapContainer\r\n//         center={[39.1, -76.1]}\r\n//         zoom={6}\r\n//         scrollWheelZoom={true}\r\n//         zoomControl={false}\r\n//       >\r\n//         <MapTileLayer\r\n//           url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n//           attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a>'\r\n//         />\r\n//         <LayersControl position=\"topleft\">\r\n//           <LayersControl.Overlay name=\"Precipitation\">\r\n//             <TileLayer\r\n//               url={`https://tile.openweathermap.org/map/precipitation_new/{z}/{x}/{y}.png?appid=${API_KEY}`}\r\n//             />\r\n//           </LayersControl.Overlay>\r\n//           <LayersControl.Overlay name=\"Clouds\">\r\n//             <TileLayer\r\n//               url={`https://tile.openweathermap.org/map/clouds_new/{z}/{x}/{y}.png?appid=${API_KEY}`}\r\n//             />\r\n//           </LayersControl.Overlay>\r\n//           <LayersControl.Overlay name=\"Temperature\">\r\n//             <TileLayer\r\n//               url={`https://tile.openweathermap.org/map/temp_new/{z}/{x}/{y}.png?appid=${API_KEY}`}\r\n//             />\r\n//             <Legend>\r\n//               <TemperatureLegend />\r\n//             </Legend>\r\n//           </LayersControl.Overlay>\r\n//           <LayersControl.Overlay name=\"Wind\">\r\n//             <TileLayer\r\n//               url={`https://tile.openweathermap.org/map/wind_new/{z}/{x}/{y}.png?appid=${API_KEY}`}\r\n//             />\r\n//           </LayersControl.Overlay>\r\n//           <LayersControl.Overlay name=\"Pressure\">\r\n//             <TileLayer\r\n//               url={`https://tile.openweathermap.org/map/pressure_new/{z}/{x}/{y}.png?appid=${API_KEY}`}\r\n//             />\r\n//           </LayersControl.Overlay>\r\n//         </LayersControl>\r\n//         <ZoomControl position=\"topright\" />\r\n//       </MapContainer>\r\n//     </PageContainer>\r\n//   );\r\n// }\r\n\r\n// export default Solution;\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  MapContainer,\r\n  TileLayer,\r\n  ZoomControl,\r\n  LayersControl,\r\n} from \"react-leaflet\";\r\nimport {\r\n  PageContainer,\r\n  MapTileLayer,\r\n  Legend,\r\n} from \"./styles/solution_style.js\";\r\nimport TemperatureLegend from \"../components/legend_temp.js\";\r\n\r\nfunction Solution() {\r\n  const API_KEY = \"06aac0fd4ba239a20d824ef89602f311\";\r\n  const [showLegend, setShowLegend] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const temperatureLayer = document.querySelector(\r\n      \".leaflet-control-layers-selector + span[title='Temperature']\"\r\n    );\r\n    if (temperatureLayer) {\r\n      temperatureLayer.addEventListener(\"click\", () => {\r\n        setShowLegend(true);\r\n      });\r\n      temperatureLayer.addEventListener(\"dblclick\", () => {\r\n        setShowLegend(false);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <PageContainer>\r\n      <MapContainer\r\n        center={[39.1, -76.1]}\r\n        zoom={6}\r\n        scrollWheelZoom={true}\r\n        zoomControl={false}\r\n      >\r\n        <MapTileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a>'\r\n        />\r\n        <LayersControl position=\"topleft\">\r\n          <LayersControl.Overlay name=\"Precipitation\">\r\n            <TileLayer\r\n              url={`https://tile.openweathermap.org/map/precipitation_new/{z}/{x}/{y}.png?appid=${API_KEY}`}\r\n            />\r\n          </LayersControl.Overlay>\r\n          <LayersControl.Overlay name=\"Clouds\">\r\n            <TileLayer\r\n              url={`https://tile.openweathermap.org/map/clouds_new/{z}/{x}/{y}.png?appid=${API_KEY}`}\r\n            />\r\n          </LayersControl.Overlay>\r\n          <LayersControl.Overlay name=\"Temperature\">\r\n            <TileLayer\r\n              url={`https://tile.openweathermap.org/map/temp_new/{z}/{x}/{y}.png?appid=${API_KEY}`}\r\n            />\r\n          </LayersControl.Overlay>\r\n          <LayersControl.Overlay name=\"Wind\">\r\n            <TileLayer\r\n              url={`https://tile.openweathermap.org/map/wind_new/{z}/{x}/{y}.png?appid=${API_KEY}`}\r\n            />\r\n          </LayersControl.Overlay>\r\n          <LayersControl.Overlay name=\"Pressure\">\r\n            <TileLayer\r\n              url={`https://tile.openweathermap.org/map/pressure_new/{z}/{x}/{y}.png?appid=${API_KEY}`}\r\n            />\r\n          </LayersControl.Overlay>\r\n        </LayersControl>\r\n        <ZoomControl position=\"topright\" />\r\n      </MapContainer>\r\n      {showLegend && (\r\n        <Legend>\r\n          <TemperatureLegend />\r\n        </Legend>\r\n      )}\r\n    </PageContainer>\r\n  );\r\n}\r\n\r\nexport default Solution;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}