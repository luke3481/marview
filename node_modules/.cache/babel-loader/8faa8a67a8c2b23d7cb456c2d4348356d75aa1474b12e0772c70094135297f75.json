{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Luke\\\\OneDrive\\\\Desktop\\\\GitHub\\\\marview\\\\frontend\\\\src\\\\components\\\\legend_temp.js\";\n// import React from \"react\";\n// import \"./templegend_style.css\";\n\n// function TemperatureLegend() {\n//   const temperatureStops = [\n//     { temp: -30, color: \"rgba(130, 87, 219, 1)\" },\n//     { temp: -20, color: \"rgba(32, 140, 236, 1)\" },\n//     { temp: -10, color: \"rgba(32, 196, 232, 1)\" },\n//     { temp: 0, color: \"rgba(35, 221, 221, 1)\" },\n//     { temp: 10, color: \"rgba(194, 255, 40, 1)\" },\n//     { temp: 20, color: \"rgba(255, 240, 40, 1)\" },\n//     { temp: 25, color: \"rgba(255, 194, 40, 1)\" },\n//     { temp: 30, color: \"rgba(252, 128, 20, 1)\" },\n//   ];\n\n//   return (\n//     <div className=\"temperature-legend\">\n//       <h3>Temperature</h3>\n//       <div className=\"color-scale\">\n//         {temperatureStops.map((stop) => (\n//           <div\n//             key={stop.temp}\n//             className=\"stop-label\"\n//             style={{ backgroundColor: stop.color }}\n//           >\n//             <span className=\"label-text\">{stop.temp}°C</span>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default TemperatureLegend;\n\nimport { TemperatureLegendWrapper, ColorScale, StopLabel, LabelText } from \"./legend_temp_style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TemperatureLegend() {\n  var _this = this;\n  var temperatureStops = [{\n    temp: -30,\n    color: \"rgba(130, 87, 219, 1)\"\n  }, {\n    temp: -20,\n    color: \"rgba(32, 140, 236, 1)\"\n  }, {\n    temp: -10,\n    color: \"rgba(32, 196, 232, 1)\"\n  }, {\n    temp: 0,\n    color: \"rgba(35, 221, 221, 1)\"\n  }, {\n    temp: 10,\n    color: \"rgba(194, 255, 40, 1)\"\n  }, {\n    temp: 20,\n    color: \"rgba(255, 240, 40, 1)\"\n  }, {\n    temp: 25,\n    color: \"rgba(255, 194, 40, 1)\"\n  }, {\n    temp: 30,\n    color: \"rgba(252, 128, 20, 1)\"\n  }];\n  return /*#__PURE__*/_jsxDEV(TemperatureLegendWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Temperature\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ColorScale, {\n      children: temperatureStops.map(function (stop) {\n        return /*#__PURE__*/_jsxDEV(StopLabel, {\n          style: {\n            backgroundColor: stop.color\n          },\n          children: /*#__PURE__*/_jsxDEV(LabelText, {\n            children: [stop.temp, \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, _this)\n        }, stop.temp, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_c = TemperatureLegend;\nexport default TemperatureLegend;\nvar _c;\n$RefreshReg$(_c, \"TemperatureLegend\");","map":{"version":3,"names":["TemperatureLegendWrapper","ColorScale","StopLabel","LabelText","jsxDEV","_jsxDEV","TemperatureLegend","_this","temperatureStops","temp","color","children","fileName","_jsxFileName","lineNumber","columnNumber","map","stop","style","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/Luke/OneDrive/Desktop/GitHub/marview/frontend/src/components/legend_temp.js"],"sourcesContent":["// import React from \"react\";\r\n// import \"./templegend_style.css\";\r\n\r\n// function TemperatureLegend() {\r\n//   const temperatureStops = [\r\n//     { temp: -30, color: \"rgba(130, 87, 219, 1)\" },\r\n//     { temp: -20, color: \"rgba(32, 140, 236, 1)\" },\r\n//     { temp: -10, color: \"rgba(32, 196, 232, 1)\" },\r\n//     { temp: 0, color: \"rgba(35, 221, 221, 1)\" },\r\n//     { temp: 10, color: \"rgba(194, 255, 40, 1)\" },\r\n//     { temp: 20, color: \"rgba(255, 240, 40, 1)\" },\r\n//     { temp: 25, color: \"rgba(255, 194, 40, 1)\" },\r\n//     { temp: 30, color: \"rgba(252, 128, 20, 1)\" },\r\n//   ];\r\n\r\n//   return (\r\n//     <div className=\"temperature-legend\">\r\n//       <h3>Temperature</h3>\r\n//       <div className=\"color-scale\">\r\n//         {temperatureStops.map((stop) => (\r\n//           <div\r\n//             key={stop.temp}\r\n//             className=\"stop-label\"\r\n//             style={{ backgroundColor: stop.color }}\r\n//           >\r\n//             <span className=\"label-text\">{stop.temp}°C</span>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default TemperatureLegend;\r\n\r\nimport {\r\n  TemperatureLegendWrapper,\r\n  ColorScale,\r\n  StopLabel,\r\n  LabelText,\r\n} from \"./legend_temp_style\";\r\n\r\nfunction TemperatureLegend() {\r\n  const temperatureStops = [\r\n    { temp: -30, color: \"rgba(130, 87, 219, 1)\" },\r\n    { temp: -20, color: \"rgba(32, 140, 236, 1)\" },\r\n    { temp: -10, color: \"rgba(32, 196, 232, 1)\" },\r\n    { temp: 0, color: \"rgba(35, 221, 221, 1)\" },\r\n    { temp: 10, color: \"rgba(194, 255, 40, 1)\" },\r\n    { temp: 20, color: \"rgba(255, 240, 40, 1)\" },\r\n    { temp: 25, color: \"rgba(255, 194, 40, 1)\" },\r\n    { temp: 30, color: \"rgba(252, 128, 20, 1)\" },\r\n  ];\r\n\r\n  return (\r\n    <TemperatureLegendWrapper>\r\n      <h3>Temperature</h3>\r\n      <ColorScale>\r\n        {temperatureStops.map((stop) => (\r\n          <StopLabel key={stop.temp} style={{ backgroundColor: stop.color }}>\r\n            <LabelText>{stop.temp}°C</LabelText>\r\n          </StopLabel>\r\n        ))}\r\n      </ColorScale>\r\n    </TemperatureLegendWrapper>\r\n  );\r\n}\r\n\r\nexport default TemperatureLegend;\r\n"],"mappings":";AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SACEA,wBAAwB,EACxBC,UAAU,EACVC,SAAS,EACTC,SAAS,QACJ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,SAASC,iBAAiBA,CAAA,EAAG;EAAA,IAAAC,KAAA;EAC3B,IAAMC,gBAAgB,GAAG,CACvB;IAAEC,IAAI,EAAE,CAAC,EAAE;IAAEC,KAAK,EAAE;EAAwB,CAAC,EAC7C;IAAED,IAAI,EAAE,CAAC,EAAE;IAAEC,KAAK,EAAE;EAAwB,CAAC,EAC7C;IAAED,IAAI,EAAE,CAAC,EAAE;IAAEC,KAAK,EAAE;EAAwB,CAAC,EAC7C;IAAED,IAAI,EAAE,CAAC;IAAEC,KAAK,EAAE;EAAwB,CAAC,EAC3C;IAAED,IAAI,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAwB,CAAC,EAC5C;IAAED,IAAI,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAwB,CAAC,EAC5C;IAAED,IAAI,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAwB,CAAC,EAC5C;IAAED,IAAI,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAwB,CAAC,CAC7C;EAED,oBACEL,OAAA,CAACL,wBAAwB;IAAAW,QAAA,gBACvBN,OAAA;MAAAM,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACpBV,OAAA,CAACJ,UAAU;MAAAU,QAAA,EACRH,gBAAgB,CAACQ,GAAG,CAAC,UAACC,IAAI;QAAA,oBACzBZ,OAAA,CAACH,SAAS;UAAiBgB,KAAK,EAAE;YAAEC,eAAe,EAAEF,IAAI,CAACP;UAAM,CAAE;UAAAC,QAAA,eAChEN,OAAA,CAACF,SAAS;YAAAQ,QAAA,GAAEM,IAAI,CAACR,IAAI,EAAC,OAAE;UAAA;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAR,KAAA;QAAY,GADtBU,IAAI,CAACR,IAAI;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAR,KAAA,CAEb;MAAA,CACb;IAAC;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACY;AAE/B;AAACK,EAAA,GAxBQd,iBAAiB;AA0B1B,eAAeA,iBAAiB;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}