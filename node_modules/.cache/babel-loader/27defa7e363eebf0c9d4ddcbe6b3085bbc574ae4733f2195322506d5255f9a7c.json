{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Luke\\\\OneDrive\\\\Desktop\\\\GitHub\\\\marview\\\\frontend\\\\src\\\\pages\\\\product.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { MapContainer, TileLayer, ZoomControl, LayersControl, LayerGroup, Popup, FeatureGroup, Marker } from \"react-leaflet\";\nimport { HeatmapLayer } from \"react-leaflet-heatmap-layer-v3\";\nimport { PageContainer, MapTileLayer } from \"./styles/product_style.js\";\nimport TemperatureLegend from \"../components/legend_temp.js\";\nimport { testPoints } from \"./testpoints.js\";\n\n// CODE BELOW CAN BE USED TO CREATE A DYNAMIC RECTANGLE ON MAP\n\n// import {\n//   createElementObject,\n//   createPathComponent,\n//   extendContext,\n// } from \"@react-leaflet/core\";\n// import L from \"leaflet\";\n\n// function getBounds(props) {\n//   return L.latLng(props.center).toBounds(props.size);\n// }\n\n// function createSquare(props, context) {\n//   const square = new L.Rectangle(getBounds(props));\n//   return createElementObject(\n//     square,\n//     extendContext(context, { overlayContainer: square })\n//   );\n// }\n\n// function updateSquare(instance, props, prevProps) {\n//   if (props.center !== prevProps.center || props.size !== prevProps.size) {\n//     instance.setBounds(getBounds(props));\n//   }\n// }\n\n// const Square = createPathComponent(createSquare, updateSquare);\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Product() {\n  // const API_KEY = \"06aac0fd4ba239a20d824ef89602f311\"; /* api key that works */\n  var API_KEY = \"e6d8c9c20269bd6d193a610ab4f7d761\"; /* my api key */\n  var center = [39.1, -76.1];\n  return /*#__PURE__*/_jsxDEV(PageContainer, {\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: center,\n      zoom: 7,\n      scrollWheelZoom: true,\n      zoomControl: false,\n      children: [/*#__PURE__*/_jsxDEV(MapTileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a>\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LayersControl, {\n        position: \"topleft\",\n        children: [/*#__PURE__*/_jsxDEV(LayersControl.Overlay, {\n          name: \"Precipitation\",\n          children: /*#__PURE__*/_jsxDEV(TileLayer, {\n            url: \"https://tile.openweathermap.org/map/precipitation_new/{z}/{x}/{y}.png?appid=\".concat(API_KEY)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LayersControl.Overlay, {\n          name: \"Clouds\",\n          children: /*#__PURE__*/_jsxDEV(TileLayer, {\n            url: \"https://tile.openweathermap.org/map/clouds_new/{z}/{x}/{y}.png?appid=\".concat(API_KEY)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LayersControl.Overlay, {\n          name: \"Temperature\",\n          children: /*#__PURE__*/_jsxDEV(LayerGroup, {\n            children: /*#__PURE__*/_jsxDEV(TileLayer, {\n              url: \"https://tile.openweathermap.org/map/temp_new/{z}/{x}/{y}.png?appid=\".concat(API_KEY)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LayersControl.Overlay, {\n          name: \"Wind\",\n          children: /*#__PURE__*/_jsxDEV(TileLayer, {\n            url: \"https://tile.openweathermap.org/map/wind_new/{z}/{x}/{y}.png?appid=\".concat(API_KEY)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LayersControl.Overlay, {\n          name: \"Pressure\",\n          children: /*#__PURE__*/_jsxDEV(TileLayer, {\n            url: \"https://tile.openweathermap.org/map/pressure_new/{z}/{x}/{y}.png?appid=\".concat(API_KEY)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LayersControl.Overlay, {\n          name: \"Heatmap\",\n          children: /*#__PURE__*/_jsxDEV(HeatmapLayer\n          // fitBoundsOnLoad\n          // fitBoundsOnUpdate\n          , {\n            points: testPoints,\n            longitudeExtractor: function longitudeExtractor(m) {\n              return m[1];\n            },\n            latitudeExtractor: function latitudeExtractor(m) {\n              return m[0];\n            },\n            intensityExtractor: function intensityExtractor(m) {\n              return parseFloat(m[2]);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ZoomControl, {\n        position: \"topright\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_c = Product;\nexport default Product;\nvar _c;\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","ZoomControl","LayersControl","LayerGroup","Popup","FeatureGroup","Marker","HeatmapLayer","PageContainer","MapTileLayer","TemperatureLegend","testPoints","jsxDEV","_jsxDEV","Product","API_KEY","center","children","zoom","scrollWheelZoom","zoomControl","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","position","Overlay","name","concat","points","longitudeExtractor","m","latitudeExtractor","intensityExtractor","parseFloat","_c","$RefreshReg$"],"sources":["C:/Users/Luke/OneDrive/Desktop/GitHub/marview/frontend/src/pages/product.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  MapContainer,\r\n  TileLayer,\r\n  ZoomControl,\r\n  LayersControl,\r\n  LayerGroup,\r\n  Popup,\r\n  FeatureGroup,\r\n  Marker,\r\n} from \"react-leaflet\";\r\nimport { HeatmapLayer } from \"react-leaflet-heatmap-layer-v3\";\r\nimport { PageContainer, MapTileLayer } from \"./styles/product_style.js\";\r\nimport TemperatureLegend from \"../components/legend_temp.js\";\r\nimport { testPoints } from \"./testpoints.js\";\r\n\r\n// CODE BELOW CAN BE USED TO CREATE A DYNAMIC RECTANGLE ON MAP\r\n\r\n// import {\r\n//   createElementObject,\r\n//   createPathComponent,\r\n//   extendContext,\r\n// } from \"@react-leaflet/core\";\r\n// import L from \"leaflet\";\r\n\r\n// function getBounds(props) {\r\n//   return L.latLng(props.center).toBounds(props.size);\r\n// }\r\n\r\n// function createSquare(props, context) {\r\n//   const square = new L.Rectangle(getBounds(props));\r\n//   return createElementObject(\r\n//     square,\r\n//     extendContext(context, { overlayContainer: square })\r\n//   );\r\n// }\r\n\r\n// function updateSquare(instance, props, prevProps) {\r\n//   if (props.center !== prevProps.center || props.size !== prevProps.size) {\r\n//     instance.setBounds(getBounds(props));\r\n//   }\r\n// }\r\n\r\n// const Square = createPathComponent(createSquare, updateSquare);\r\n\r\nfunction Product() {\r\n  // const API_KEY = \"06aac0fd4ba239a20d824ef89602f311\"; /* api key that works */\r\n  const API_KEY = \"e6d8c9c20269bd6d193a610ab4f7d761\"; /* my api key */\r\n  const center = [39.1, -76.1];\r\n\r\n  return (\r\n    <PageContainer>\r\n      <MapContainer\r\n        center={center}\r\n        zoom={7}\r\n        scrollWheelZoom={true}\r\n        zoomControl={false}\r\n      >\r\n        <MapTileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a>'\r\n        />\r\n        <LayersControl position=\"topleft\">\r\n          <LayersControl.Overlay name=\"Precipitation\">\r\n            <TileLayer\r\n              url={`https://tile.openweathermap.org/map/precipitation_new/{z}/{x}/{y}.png?appid=${API_KEY}`}\r\n            />\r\n          </LayersControl.Overlay>\r\n          <LayersControl.Overlay name=\"Clouds\">\r\n            <TileLayer\r\n              url={`https://tile.openweathermap.org/map/clouds_new/{z}/{x}/{y}.png?appid=${API_KEY}`}\r\n            />\r\n          </LayersControl.Overlay>\r\n          <LayersControl.Overlay name=\"Temperature\">\r\n            <LayerGroup>\r\n              <TileLayer\r\n                url={`https://tile.openweathermap.org/map/temp_new/{z}/{x}/{y}.png?appid=${API_KEY}`}\r\n              />\r\n            </LayerGroup>\r\n          </LayersControl.Overlay>\r\n          <LayersControl.Overlay name=\"Wind\">\r\n            <TileLayer\r\n              url={`https://tile.openweathermap.org/map/wind_new/{z}/{x}/{y}.png?appid=${API_KEY}`}\r\n            />\r\n          </LayersControl.Overlay>\r\n          <LayersControl.Overlay name=\"Pressure\">\r\n            <TileLayer\r\n              url={`https://tile.openweathermap.org/map/pressure_new/{z}/{x}/{y}.png?appid=${API_KEY}`}\r\n            />\r\n          </LayersControl.Overlay>\r\n          <LayersControl.Overlay name=\"Heatmap\">\r\n            <HeatmapLayer\r\n              // fitBoundsOnLoad\r\n              // fitBoundsOnUpdate\r\n              points={testPoints}\r\n              longitudeExtractor={(m) => m[1]}\r\n              latitudeExtractor={(m) => m[0]}\r\n              intensityExtractor={(m) => parseFloat(m[2])}\r\n            />\r\n          </LayersControl.Overlay>\r\n        </LayersControl>\r\n        <ZoomControl position=\"topright\" />\r\n        {/* <TemperatureLegend /> */}\r\n        {/* <Square center={center} size={100000}>\r\n          <Popup>Hello Popup</Popup>\r\n        </Square> */}\r\n      </MapContainer>\r\n    </PageContainer>\r\n  );\r\n}\r\n\r\nexport default Product;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}