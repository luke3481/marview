{"ast":null,"code":"'use strict';\n\nif (typeof module !== 'undefined') module.exports = simpleheat;\nfunction simpleheat(canvas) {\n  if (!(this instanceof simpleheat)) return new simpleheat(canvas);\n  this._canvas = canvas = typeof canvas === 'string' ? document.getElementById(canvas) : canvas;\n  this._ctx = canvas.getContext('2d');\n  this._width = canvas.width;\n  this._height = canvas.height;\n  this._max = 1;\n  this._data = [];\n}\nsimpleheat.prototype = {\n  defaultRadius: 25,\n  defaultGradient: {\n    0.4: 'blue',\n    0.6: 'cyan',\n    0.7: 'lime',\n    0.8: 'yellow',\n    1.0: 'red'\n  },\n  data: function data(_data) {\n    this._data = _data;\n    return this;\n  },\n  max: function max(_max) {\n    this._max = _max;\n    return this;\n  },\n  add: function add(point) {\n    this._data.push(point);\n    return this;\n  },\n  clear: function clear() {\n    this._data = [];\n    return this;\n  },\n  radius: function radius(r, blur) {\n    blur = blur === undefined ? 15 : blur;\n\n    // create a grayscale blurred circle image that we'll use for drawing points\n    var circle = this._circle = this._createCanvas(),\n      ctx = circle.getContext('2d'),\n      r2 = this._r = r + blur;\n    circle.width = circle.height = r2 * 2;\n    ctx.shadowOffsetX = ctx.shadowOffsetY = r2 * 2;\n    ctx.shadowBlur = blur;\n    ctx.shadowColor = 'black';\n    ctx.beginPath();\n    ctx.arc(-r2, -r2, r, 0, Math.PI * 2, true);\n    ctx.closePath();\n    ctx.fill();\n    return this;\n  },\n  resize: function resize() {\n    this._width = this._canvas.width;\n    this._height = this._canvas.height;\n  },\n  gradient: function gradient(grad) {\n    // create a 256x1 gradient that we'll use to turn a grayscale heatmap into a colored one\n    var canvas = this._createCanvas(),\n      ctx = canvas.getContext('2d'),\n      gradient = ctx.createLinearGradient(0, 0, 0, 256);\n    canvas.width = 1;\n    canvas.height = 256;\n    for (var i in grad) {\n      gradient.addColorStop(+i, grad[i]);\n    }\n    ctx.fillStyle = gradient;\n    ctx.fillRect(0, 0, 1, 256);\n    this._grad = ctx.getImageData(0, 0, 1, 256).data;\n    return this;\n  },\n  draw: function draw(minOpacity) {\n    if (!this._circle) this.radius(this.defaultRadius);\n    if (!this._grad) this.gradient(this.defaultGradient);\n    var ctx = this._ctx;\n    ctx.clearRect(0, 0, this._width, this._height);\n\n    // draw a grayscale heatmap by putting a blurred circle at each data point\n    for (var i = 0, len = this._data.length, p; i < len; i++) {\n      p = this._data[i];\n      ctx.globalAlpha = Math.max(p[2] / this._max, minOpacity === undefined ? 0.05 : minOpacity);\n      ctx.drawImage(this._circle, p[0] - this._r, p[1] - this._r);\n    }\n\n    // colorize the heatmap, using opacity value of each pixel to get the right color from our gradient\n    var colored = ctx.getImageData(0, 0, this._width, this._height);\n    this._colorize(colored.data, this._grad);\n    ctx.putImageData(colored, 0, 0);\n    return this;\n  },\n  _colorize: function _colorize(pixels, gradient) {\n    for (var i = 0, len = pixels.length, j; i < len; i += 4) {\n      j = pixels[i + 3] * 4; // get gradient color from opacity value\n\n      if (j) {\n        pixels[i] = gradient[j];\n        pixels[i + 1] = gradient[j + 1];\n        pixels[i + 2] = gradient[j + 2];\n      }\n    }\n  },\n  _createCanvas: function _createCanvas() {\n    if (typeof document !== 'undefined') {\n      return document.createElement('canvas');\n    } else {\n      // create a new canvas instance in node.js\n      // the canvas class needs to have a default constructor without any parameter\n      return new this._canvas.constructor();\n    }\n  }\n};","map":{"version":3,"names":["module","exports","simpleheat","canvas","_canvas","document","getElementById","_ctx","getContext","_width","width","_height","height","_max","_data","prototype","defaultRadius","defaultGradient","data","max","add","point","push","clear","radius","r","blur","undefined","circle","_circle","_createCanvas","ctx","r2","_r","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","beginPath","arc","Math","PI","closePath","fill","resize","gradient","grad","createLinearGradient","i","addColorStop","fillStyle","fillRect","_grad","getImageData","draw","minOpacity","clearRect","len","length","p","globalAlpha","drawImage","colored","_colorize","putImageData","pixels","j","createElement","constructor"],"sources":["C:/Users/Luke/OneDrive/Desktop/GitHub/marview/frontend/node_modules/simpleheat/simpleheat.js"],"sourcesContent":["'use strict';\n\nif (typeof module !== 'undefined') module.exports = simpleheat;\n\nfunction simpleheat(canvas) {\n    if (!(this instanceof simpleheat)) return new simpleheat(canvas);\n\n    this._canvas = canvas = typeof canvas === 'string' ? document.getElementById(canvas) : canvas;\n\n    this._ctx = canvas.getContext('2d');\n    this._width = canvas.width;\n    this._height = canvas.height;\n\n    this._max = 1;\n    this._data = [];\n}\n\nsimpleheat.prototype = {\n\n    defaultRadius: 25,\n\n    defaultGradient: {\n        0.4: 'blue',\n        0.6: 'cyan',\n        0.7: 'lime',\n        0.8: 'yellow',\n        1.0: 'red'\n    },\n\n    data: function (data) {\n        this._data = data;\n        return this;\n    },\n\n    max: function (max) {\n        this._max = max;\n        return this;\n    },\n\n    add: function (point) {\n        this._data.push(point);\n        return this;\n    },\n\n    clear: function () {\n        this._data = [];\n        return this;\n    },\n\n    radius: function (r, blur) {\n        blur = blur === undefined ? 15 : blur;\n\n        // create a grayscale blurred circle image that we'll use for drawing points\n        var circle = this._circle = this._createCanvas(),\n            ctx = circle.getContext('2d'),\n            r2 = this._r = r + blur;\n\n        circle.width = circle.height = r2 * 2;\n\n        ctx.shadowOffsetX = ctx.shadowOffsetY = r2 * 2;\n        ctx.shadowBlur = blur;\n        ctx.shadowColor = 'black';\n\n        ctx.beginPath();\n        ctx.arc(-r2, -r2, r, 0, Math.PI * 2, true);\n        ctx.closePath();\n        ctx.fill();\n\n        return this;\n    },\n\n    resize: function () {\n        this._width = this._canvas.width;\n        this._height = this._canvas.height;\n    },\n\n    gradient: function (grad) {\n        // create a 256x1 gradient that we'll use to turn a grayscale heatmap into a colored one\n        var canvas = this._createCanvas(),\n            ctx = canvas.getContext('2d'),\n            gradient = ctx.createLinearGradient(0, 0, 0, 256);\n\n        canvas.width = 1;\n        canvas.height = 256;\n\n        for (var i in grad) {\n            gradient.addColorStop(+i, grad[i]);\n        }\n\n        ctx.fillStyle = gradient;\n        ctx.fillRect(0, 0, 1, 256);\n\n        this._grad = ctx.getImageData(0, 0, 1, 256).data;\n\n        return this;\n    },\n\n    draw: function (minOpacity) {\n        if (!this._circle) this.radius(this.defaultRadius);\n        if (!this._grad) this.gradient(this.defaultGradient);\n\n        var ctx = this._ctx;\n\n        ctx.clearRect(0, 0, this._width, this._height);\n\n        // draw a grayscale heatmap by putting a blurred circle at each data point\n        for (var i = 0, len = this._data.length, p; i < len; i++) {\n            p = this._data[i];\n            ctx.globalAlpha = Math.max(p[2] / this._max, minOpacity === undefined ? 0.05 : minOpacity);\n            ctx.drawImage(this._circle, p[0] - this._r, p[1] - this._r);\n        }\n\n        // colorize the heatmap, using opacity value of each pixel to get the right color from our gradient\n        var colored = ctx.getImageData(0, 0, this._width, this._height);\n        this._colorize(colored.data, this._grad);\n        ctx.putImageData(colored, 0, 0);\n\n        return this;\n    },\n\n    _colorize: function (pixels, gradient) {\n        for (var i = 0, len = pixels.length, j; i < len; i += 4) {\n            j = pixels[i + 3] * 4; // get gradient color from opacity value\n\n            if (j) {\n                pixels[i] = gradient[j];\n                pixels[i + 1] = gradient[j + 1];\n                pixels[i + 2] = gradient[j + 2];\n            }\n        }\n    },\n\n    _createCanvas: function () {\n        if (typeof document !== 'undefined') {\n            return document.createElement('canvas');\n        } else {\n            // create a new canvas instance in node.js\n            // the canvas class needs to have a default constructor without any parameter\n            return new this._canvas.constructor();\n        }\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}