{"ast":null,"code":"import 'whatwg-fetch';\nimport { useState } from 'react';\nvar BASE_URL = 'https://submit-form.com';\nvar useFormspark = function useFormspark(args) {\n  var _useState = useState(false),\n    submitting = _useState[0],\n    setSubmitting = _useState[1];\n  var submit = function submit(payload) {\n    return new Promise(function (resolve, reject) {\n      var url = BASE_URL + \"/\" + args.formId;\n      var method = 'POST';\n      var headers = {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      };\n      var body = JSON.stringify(payload);\n      setSubmitting(true);\n      fetch(url, {\n        method: method,\n        headers: headers,\n        body: body\n      }).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        resolve(json);\n      })[\"catch\"](function (error) {\n        reject(error);\n      })[\"finally\"](function () {\n        setSubmitting(false);\n      });\n    });\n  };\n  return [submit, submitting];\n};\nexport { useFormspark };","map":{"version":3,"names":["BASE_URL","useFormspark","args","_useState","useState","submitting","setSubmitting","submit","payload","Promise","resolve","reject","url","formId","method","headers","Accept","body","JSON","stringify","fetch","then","response","json","error"],"sources":["C:\\Users\\Luke\\OneDrive\\Desktop\\GitHub\\marview\\node_modules\\@formspark\\use-formspark\\src\\index.ts"],"sourcesContent":["import 'whatwg-fetch';\n\nimport { useState } from 'react';\nimport { Args, SubmitPayload } from './types/use-formspark';\n\nconst BASE_URL = 'https://submit-form.com';\n\nexport const useFormspark = (args: Args) => {\n  const [submitting, setSubmitting] = useState(false);\n\n  const submit = (payload: SubmitPayload) => {\n    return new Promise((resolve, reject) => {\n      const url = `${BASE_URL}/${args.formId}`;\n      const method = 'POST';\n      const headers = {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      };\n      const body = JSON.stringify(payload);\n      setSubmitting(true);\n      fetch(url, {\n        method,\n        headers,\n        body,\n      })\n        .then(response => response.json())\n        .then(json => {\n          resolve(json);\n        })\n        .catch(error => {\n          reject(error);\n        })\n        .finally(() => {\n          setSubmitting(false);\n        });\n    });\n  };\n\n  return [submit, submitting] as const;\n};\n\nexport * from './types/use-formspark';\n"],"mappings":";;AAKA,IAAMA,QAAQ,GAAG,yBAAjB;IAEaC,YAAY,GAAG,SAAfA,YAAeA,CAACC,IAAD;EAC1B,IAAAC,SAAA,GAAoCC,QAAQ,CAAC,KAAD,CAA5C;IAAOC,UAAP,GAAAF,SAAA;IAAmBG,aAAnB,GAAAH,SAAA;EAEA,IAAMI,MAAM,GAAG,SAATA,MAASA,CAACC,OAAD;IACb,OAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV;MACjB,IAAMC,GAAG,GAAMZ,QAAN,SAAkBE,IAAI,CAACW,MAAhC;MACA,IAAMC,MAAM,GAAG,MAAf;MACA,IAAMC,OAAO,GAAG;QACdC,MAAM,EAAE,kBADM;QAEd,gBAAgB;MAFF,CAAhB;MAIA,IAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeX,OAAf,CAAb;MACAF,aAAa,CAAC,IAAD,CAAb;MACAc,KAAK,CAACR,GAAD,EAAM;QACTE,MAAM,EAANA,MADS;QAETC,OAAO,EAAPA,OAFS;QAGTE,IAAI,EAAJA;MAHS,CAAN,CAAL,CAKGI,IALH,CAKQ,UAAAC,QAAQ;QAAA,OAAIA,QAAQ,CAACC,IAAT,EAAJ;MAAA,CALhB,EAMGF,IANH,CAMQ,UAAAE,IAAI;QACRb,OAAO,CAACa,IAAD,CAAP;MACD,CARH,WASS,UAAAC,KAAK;QACVb,MAAM,CAACa,KAAD,CAAN;MACD,CAXH,aAYW;QACPlB,aAAa,CAAC,KAAD,CAAb;MACD,CAdH;IAeD,CAxBM,CAAP;EAyBD,CA1BD;EA4BA,OAAO,CAACC,MAAD,EAASF,UAAT,CAAP;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}